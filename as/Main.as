package {	import flash.external.ExternalInterface;	import flash.net.NetConnection;	import flash.utils.*;	import flash.events.NetStatusEvent;		public class Main {		private var portArray;		private var ncHandles;		private var interval;		private var tests;		private var fcs = "fcs.domain.com";		private var res;					public function Main(testserver) {			// constructor code			portArray = new Array();			portArray[0] = {protocol:"rtmpt",port:"1935"};			portArray[1] = {protocol:"rtmpt",port:"443"};			portArray[2] = {protocol:"rtmpt",port:"80"};			portArray[3] = {protocol:"rtmp",port:"443"};			portArray[4] = {protocol:"rtmp",port:"1935"};			portArray[5] = {protocol:"rtmp",port:"80"};			ncHandles = new Array();			tests = 0;			res = false;			fcs = testserver;		}					function netStatusHandler(event:NetStatusEvent) {			tests++;			if (event.info.code == "NetConnection.Connect.Failed") {				trace("Connection failed: " + event.info.code);				ExternalInterface.call("console.log", "Connection failed: " + event.info.code);			} else if (event.info.code == "NetConnection.Connect.Success") {				trace("Connection succeeded");				res = true;			}					}				function doCleanup() {			for(var i in ncHandles) {				ncHandles[i].nc.close();			}		}				function doConnect() {			for(var i in portArray) {				var nc = new NetConnection();				nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);				ncHandles[i] = {					nc: nc,					port: portArray[i].port									};								trace("Connecting to: " + portArray[i].protocol+"://"+fcs+":"+portArray[i].port+"/port_test");				ExternalInterface.call("console.log", "Connecting to: " + portArray[i].protocol+"://"+fcs+":"+portArray[i].port+"/port_test");				ncHandles[i].nc.connect(portArray[i].protocol+"://"+fcs+":"+portArray[i].port+"/port_test");							}					}			public function runTests(jscallback) {			interval = setInterval(function() {				if(tests >= portArray.length) {					trace("Result: " + res);					doCleanup();					clearInterval(interval);					ExternalInterface.call(jscallback, res);				}			}, 1000);			doConnect();		}	}}